@startuml

class 予約者
class 予約
{
    - 予約ID
    - 予約人数
    - 予約者ID
    - 会議時間期間
    - 会議室
    + 予約内容を変更をする()
    + 予約を破棄する()
}
note bottom of 予約サービス
予約対象の会議室が埋まっていたら、
予約できない
end note 

class 予約サービス{
    + 予約対象が埋まっていないか確認をする(予約)
}

class 利用{
    - 予約ID
    - 開始時間
    - 終了時間
}

予約サービス --> 予約 : use
予約 --> 予約する時に必要な情報 : use

rectangle 予約する時に必要な情報 {
    class 予約者ID
    rectangle ここは一緒の情報？ {
        class "会議室" as MeetingRooms
        {
            - List<予約時間>
            + 時間を予約する(開始時間, 終了時間) : 予約
            + 予約一覧を出す(日付):List 会議時間
        }
        class "会議時間期間 TimeSpan" as ReservedTimeSpan {
            - 開始時間
            - 終了時間
            + 数値時間()
            + 時間が重なっているかどうかのチェックをする() 
        }
        class "予約時間" as ReservedTime {

        }
    }
    ReservedTimeSpan --> ReservedTime
    MeetingRooms --> ReservedTimeSpan : use
    class 予約人数
    class 予約者ID
    note bottom of 予約者ID
    誰が予約したか
    end note 
    note bottom of 予約人数
    今回、これ何人？
    end note

    note right of ReservedTime
    15分単位
    end note
    note bottom of ReservedTime
    予約できる日時は、30日以内
    end note
    note bottom of ReservedTime
    ReservedTimeSpanは10:00-19:00
    end note

    note right of ReservedTimeSpan
    開始時間<終了時間になるように
    end note
    note bottom of ReservedTimeSpan
    日付をまたがる予約は不可能
    end note
}

@enduml